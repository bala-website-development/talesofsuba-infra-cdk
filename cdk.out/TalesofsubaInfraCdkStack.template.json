{
 "Resources": {
  "TalesOfSubaDLQ73095311": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-DLQ/Resource"
   }
  },
  "TalesOfSubabufferingQueue32E7095F": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "TalesOfSubaDLQ73095311",
       "Arn"
      ]
     },
     "maxReceiveCount": 1
    },
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-bufferingQueue/Resource"
   }
  },
  "TalesOfSubaLoggroupBFE819EB": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-Loggroup/Resource"
   }
  },
  "TalesOfSubaeventtable3AFF9B6D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "TableName": "TalesOfSuba-EventTable"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-event-table/Resource"
   }
  },
  "TalesOfSubaSqsHandlerLambdaExecutionRole8E6E3493": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "TalesOfSuba-SqsHandlerLambdaExecutionRole"
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-SqsHandlerLambdaExecutionRole/Resource"
   }
  },
  "TalesOfSubaSqsHandlerLambdaExecutionRoleDefaultPolicy82A427A6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TalesOfSubabufferingQueue32E7095F",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TalesOfSubaSqsHandlerLambdaExecutionRoleDefaultPolicy82A427A6",
    "Roles": [
     {
      "Ref": "TalesOfSubaSqsHandlerLambdaExecutionRole8E6E3493"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-SqsHandlerLambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "TalesOfSubaSqsHandlerInlinePolicyEF951495": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DescribeLimits",
        "dynamodb:DescribeReservedCapacity*",
        "dynamodb:DescribeTimeToLive",
        "dynamodb:Get*",
        "dynamodb:List*",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TalesOfSubaeventtable3AFF9B6D",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TalesOfSubabufferingQueue32E7095F",
         "Arn"
        ]
       }
      },
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TalesOfSubaDLQ73095311",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TalesOfSubaSqsHandlerInlinePolicyEF951495",
    "Roles": [
     {
      "Ref": "TalesOfSubaSqsHandlerLambdaExecutionRole8E6E3493"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-SqsHandlerInlinePolicy/Resource"
   }
  },
  "TalesOfSubaAPIGatewayHandlerLambdaExecutionRole6EA0DBF8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "TalesOfSuba-APIGatewayHandlerLambdaExecutionRole"
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-APIGatewayHandlerLambdaExecutionRole/Resource"
   }
  },
  "TalesOfSubaAPIGatewayHandlerInlinePolicy34E1C15B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DescribeLimits",
        "dynamodb:DescribeReservedCapacity*",
        "dynamodb:DescribeTimeToLive",
        "dynamodb:Get*",
        "dynamodb:List*",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TalesOfSubaeventtable3AFF9B6D",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TalesOfSubaAPIGatewayHandlerInlinePolicy34E1C15B",
    "Roles": [
     {
      "Ref": "TalesOfSubaAPIGatewayHandlerLambdaExecutionRole6EA0DBF8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-APIGatewayHandlerInlinePolicy/Resource"
   }
  },
  "TalesOfSubaApiGwV2ToSqsRoleA3921543": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
    ],
    "RoleName": "TalesOfSuba-ApiGwV2ToSqsRole"
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-ApiGwV2ToSqsRole/Resource"
   }
  },
  "TalesOfSubaApiGwV2ToSqsInlinePolicy1688FD0B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:DeleteMessage",
        "sqs:PurgeQueue",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TalesOfSubabufferingQueue32E7095F",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TalesOfSubaApiGwV2ToSqsInlinePolicy1688FD0B",
    "Roles": [
     {
      "Ref": "TalesOfSubaApiGwV2ToSqsRoleA3921543"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-ApiGwV2ToSqsInlinePolicy/Resource"
   }
  },
  "TalesOfSubaapigatewayhandler01D9B7D6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-949365052778-ap-south-1",
     "S3Key": "edaa3f428e249704c0fa1412f5e893bdcc863750bd81784d04ba521ede513918.zip"
    },
    "Environment": {
     "Variables": {
      "table": {
       "Ref": "TalesOfSubaeventtable3AFF9B6D"
      }
     }
    },
    "FunctionName": "TalesOfSuba-apigatewayhandler",
    "Handler": "apigatewayhandler.handler",
    "Role": {
     "Fn::GetAtt": [
      "TalesOfSubaAPIGatewayHandlerLambdaExecutionRole6EA0DBF8",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "TalesOfSubaAPIGatewayHandlerLambdaExecutionRole6EA0DBF8"
   ],
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-apigatewayhandler/Resource",
    "aws:asset:path": "asset.edaa3f428e249704c0fa1412f5e893bdcc863750bd81784d04ba521ede513918",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TalesOfSubaApiGwToLambdaRoleAE994376": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "TalesOfSuba-ApiGwToLambdaRole"
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-ApiGwToLambdaRole/Resource"
   }
  },
  "TalesOfSubaApiGwToLambdaInlinePolicyD7BAF05E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TalesOfSubaapigatewayhandler01D9B7D6",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TalesOfSubaApiGwToLambdaInlinePolicyD7BAF05E",
    "Roles": [
     {
      "Ref": "TalesOfSubaApiGwToLambdaRoleAE994376"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-ApiGwToLambdaInlinePolicy/Resource"
   }
  },
  "TalesOfSubaHttpToSqsAPI": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowCredentials": false,
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "GET",
      "POST",
      "PUT",
      "DELETE"
     ],
     "AllowOrigins": [
      "*"
     ],
     "MaxAge": 43200
    },
    "Name": "TalesOfSuba-function",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-HttpToSqs-API"
   }
  },
  "TalesOfSubaHttpToSqsStage": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "AccessLogSettings": {
     "DestinationArn": {
      "Fn::GetAtt": [
       "TalesOfSubaLoggroupBFE819EB",
       "Arn"
      ]
     },
     "Format": "{ \"requestId\":\"$context.requestId\", \"ip\": \"$context.identity.sourceIp\", \"requestTime\":\"$context.requestTime\", \"httpMethod\":\"$context.httpMethod\",\"routeKey\":\"$context.routeKey\", \"status\":\"$context.status\",\"protocol\":\"$context.protocol\", \"responseLength\":\"$context.responseLength\" }"
    },
    "ApiId": {
     "Ref": "TalesOfSubaHttpToSqsAPI"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-HttpToSqsStage"
   }
  },
  "TalesOfSubahttpApiIntegSqsSendMessage": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "TalesOfSubaHttpToSqsAPI"
    },
    "CredentialsArn": {
     "Fn::GetAtt": [
      "TalesOfSubaApiGwV2ToSqsRoleA3921543",
      "Arn"
     ]
    },
    "IntegrationSubtype": "SQS-SendMessage",
    "IntegrationType": "AWS_PROXY",
    "PayloadFormatVersion": "1.0",
    "RequestParameters": {
     "QueueUrl": {
      "Ref": "TalesOfSubabufferingQueue32E7095F"
     },
     "MessageBody": "$request.body"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-httpApiIntegSqsSendMessage"
   }
  },
  "TalesOfSubaHttpApiRouteSqsSendMsg2": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "TalesOfSubaHttpToSqsAPI"
    },
    "RouteKey": "GET /itemsbytype/{id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "TalesOfSubahttpApiIntegSqsSendMessage"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-HttpApiRouteSqsSendMsg2"
   }
  },
  "TalesOfSubasqshandler5F5521BB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-949365052778-ap-south-1",
     "S3Key": "edaa3f428e249704c0fa1412f5e893bdcc863750bd81784d04ba521ede513918.zip"
    },
    "Environment": {
     "Variables": {
      "table": {
       "Ref": "TalesOfSubaeventtable3AFF9B6D"
      }
     }
    },
    "FunctionName": "TalesOfSuba-sqshandler",
    "Handler": "sqshandler.handler",
    "Role": {
     "Fn::GetAtt": [
      "TalesOfSubaSqsHandlerLambdaExecutionRole8E6E3493",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "TalesOfSubaSqsHandlerLambdaExecutionRoleDefaultPolicy82A427A6",
    "TalesOfSubaSqsHandlerLambdaExecutionRole8E6E3493"
   ],
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-sqshandler/Resource",
    "aws:asset:path": "asset.edaa3f428e249704c0fa1412f5e893bdcc863750bd81784d04ba521ede513918",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TalesOfSubasqshandlerSqsEventSourceTalesofsubaInfraCdkStackTalesOfSubabufferingQueueD068B1DF4321A4F0": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "EventSourceArn": {
     "Fn::GetAtt": [
      "TalesOfSubabufferingQueue32E7095F",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "TalesOfSubasqshandler5F5521BB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-sqshandler/SqsEventSource:TalesofsubaInfraCdkStackTalesOfSubabufferingQueueD068B1DF/Resource"
   }
  },
  "TalesOfSubahttpApiIntegInvokeLambda": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "TalesOfSubaHttpToSqsAPI"
    },
    "CredentialsArn": {
     "Fn::GetAtt": [
      "TalesOfSubaAPIGatewayHandlerLambdaExecutionRole6EA0DBF8",
      "Arn"
     ]
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "TalesOfSubaapigatewayhandler01D9B7D6",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "1.0"
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-httpApiIntegInvokeLambda"
   }
  },
  "TalesOfSubaHttpApiRouteInvokeLambda": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "TalesOfSubaHttpToSqsAPI"
    },
    "RouteKey": "GET /items",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "TalesOfSubahttpApiIntegInvokeLambda"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/TalesOfSuba-HttpApiRouteInvokeLambda"
   }
  },
  "MyLambdaLogGroupA24CCB16": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "TalesOfSubasqshandler5F5521BB"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/MyLambdaLogGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2WOwW6DMBBEvyV3swVy6TWJ2qpSq7bQe7TABjmATVkbhCz/e2WT9NLTPO+MdyeHLHuEdIcLJ3XTJb2swJUG607gwmfHPwzuy5IlcbqoCF70umVwb7p9mbQdg3FnL5pV4aCbCtw3Vn38FcELiQO4Qm+zqJ+6l/Uanht50eNQNQju2araSK2C98dPMylTajvV9I7jKFUb7P9TL3h/RmYyDIcggvdwtHVH5ohMAkfZoqEF1zkHd7qowyjDptJgG8u9KkPthPcChbaGvBcFcTwj4tKQvlX4sGa0JkZvES+Ubgiu/DDnKWQZpLsrS5lMVhk5EBSb/gJyUXbJfgEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "TalesofsubaInfraCdkStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "TalesOfSubaHttpApiEndpoint": {
   "Description": "API Endpoint",
   "Value": {
    "Fn::GetAtt": [
     "TalesOfSubaHttpToSqsAPI",
     "ApiEndpoint"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}